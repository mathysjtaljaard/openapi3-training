/*
 * API Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * BeerOrderLine
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-30T12:41:59.174138Z[Etc/UTC]")
public class BeerOrderLine {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_BEER_ID = "beerId";
  @SerializedName(SERIALIZED_NAME_BEER_ID)
  private UUID beerId;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_ORDER_QUANTITY = "orderQuantity";
  @SerializedName(SERIALIZED_NAME_ORDER_QUANTITY)
  private Integer orderQuantity;

  public static final String SERIALIZED_NAME_QUANTITY_ALLOCATED = "quantityAllocated";
  @SerializedName(SERIALIZED_NAME_QUANTITY_ALLOCATED)
  private Integer quantityAllocated;


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getId() {
    return id;
  }




   /**
   * Get beerId
   * @return beerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getBeerId() {
    return beerId;
  }




  public BeerOrderLine upc(String upc) {
    
    this.upc = upc;
    return this;
  }

   /**
   * Get upc
   * @return upc
  **/
  @ApiModelProperty(required = true, value = "")

  public String getUpc() {
    return upc;
  }


  public void setUpc(String upc) {
    this.upc = upc;
  }


  public BeerOrderLine orderQuantity(Integer orderQuantity) {
    
    this.orderQuantity = orderQuantity;
    return this;
  }

   /**
   * Get orderQuantity
   * minimum: 1
   * maximum: 999
   * @return orderQuantity
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getOrderQuantity() {
    return orderQuantity;
  }


  public void setOrderQuantity(Integer orderQuantity) {
    this.orderQuantity = orderQuantity;
  }


   /**
   * Get quantityAllocated
   * @return quantityAllocated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQuantityAllocated() {
    return quantityAllocated;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeerOrderLine beerOrderLine = (BeerOrderLine) o;
    return Objects.equals(this.id, beerOrderLine.id) &&
        Objects.equals(this.beerId, beerOrderLine.beerId) &&
        Objects.equals(this.upc, beerOrderLine.upc) &&
        Objects.equals(this.orderQuantity, beerOrderLine.orderQuantity) &&
        Objects.equals(this.quantityAllocated, beerOrderLine.quantityAllocated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, beerId, upc, orderQuantity, quantityAllocated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeerOrderLine {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    beerId: ").append(toIndentedString(beerId)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    orderQuantity: ").append(toIndentedString(orderQuantity)).append("\n");
    sb.append("    quantityAllocated: ").append(toIndentedString(quantityAllocated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

